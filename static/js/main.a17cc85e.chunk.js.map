{"version":3,"sources":["Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Modal/Modal.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","Components/SearchBar/SearchBar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Button/Button.jsx","Components/Loader/Loader.jsx","Components/Modal/Modal.jsx","Services/API.jsx","App.js","index.js","Components/SearchBar/SearchBar.module.css"],"names":["module","exports","Searchbar","state","inputValue","handleChange","target","name","value","setState","toLowerCase","className","style","onSubmit","this","props","SearchForm","type","SearchFormButton","SearchFormButtonLabel","text","onChange","SearchFormInput","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","webformatURL","tags","largeImageURL","src","alt","ImageGalleryItemImage","ImageGallery","imgArr","onOpen","onClick","e","dataset","source","map","id","Button","Loader","color","height","width","timeout","position","top","left","Modal","closeModalByESC","key","modalClose","window","addEventListener","removeEventListener","modalImg","Overlay","imagesAPI","FetchImages","img","page","fetch","then","response","ok","json","Promise","reject","Error","Status","App","searchImg","isModalOpen","error","status","getData","data","nextName","nextPage","imagesApi","hits","length","alert","catch","handleSubmit","event","preventDefault","trim","toast","loading","handleLoadeMore","prev","scroll","scrollTo","document","documentElement","scrollHeight","behavior","hendelOpenModal","hendelCloseModal","prevProps","prevState","prevName","prevPage","resolvedImg","autoClose","message","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a17cc85e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2PaM5\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1dTac\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3WI-V\",\"Modal\":\"Modal_Modal__2SsBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3_rty\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__Ka68f\"};","import { Component } from \"react\";\r\nimport style from \"./SearchBar.module.css\";\r\n\r\nclass Searchbar extends Component {\r\n  state = { inputValue: \"\" };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value.toLowerCase() });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={style.Searchbar}>\r\n        <form onSubmit={this.props.onSubmit} className={style.SearchForm}>\r\n          <button type=\"submit\" className={style.SearchFormButton}>\r\n            <span className={style.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            name=\"inputValue\"\r\n            value={this.state.text}\r\n            onChange={this.handleChange}\r\n            className={style.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport style from \"./ImageGalleryItem.module.css\";\r\n\r\nfunction ImageGalleryItem({ webformatURL, tags, largeImageURL }) {\r\n  return (\r\n    <li className={style.ImageGalleryItem}>\r\n      <img\r\n        // onClick={onOpen}\r\n        data-source={largeImageURL}\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className={style.ImageGalleryItemImage}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string,\r\n  id: PropTypes.number,\r\n  tags: PropTypes.string.isRequired,\r\n  // onOpen: PropTypes.func,\r\n  largeImageURL: PropTypes.string,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport style from \"./ImageGallery.module.css\";\r\n\r\nfunction ImageGallery({ imgArr, onOpen }) {\r\n  return (\r\n    <ul\r\n      className={style.ImageGallery}\r\n      onClick={(e) => onOpen(e.target.dataset.source)}\r\n    >\r\n      {imgArr.map(({ webformatURL, id, tags, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          id={id}\r\n          tags={tags}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          // onOpen={onOpen}\r\n        />\r\n      ))}\r\n      {/* {imgArr.map((imgArr) => (\r\n        <ImageGalleryItem key={imgArr.id} imgArr={imgArr} onOpen={onOpen} />\r\n      ))} */}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  imgArr: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from \"prop-types\";\r\nimport style from \"./Button.module.css\";\r\n\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" className={style.Button} onClick={onClick}>\r\n      Load More\r\n    </button>\r\n  );\r\n}\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\n// import style from \"./Button.module.css\";\r\n\r\n// function Button({ onClick }) {\r\n//   return (\r\n//     <button onClick={onClick} className={style.Button}>\r\n//       Load More\r\n//     </button>\r\n//   );\r\n// }\r\n\r\n// export default Button;\r\n","import React, { Component } from \"react\";\r\nimport ReactLoaderSpinner from \"react-loader-spinner\";\r\n\r\nexport default class Loader extends Component {\r\n  render() {\r\n    return (\r\n      <ReactLoaderSpinner\r\n        type=\"Hearts\"\r\n        color=\"#85309f\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000} //3 secs\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"50%\",\r\n          left: \"47%\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport style from \"./Modal.module.css\";\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.closeModalByESC);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.closeModalByESC);\r\n  }\r\n\r\n  closeModalByESC = (e) => {\r\n    if (e.key !== \"Escape\") {\r\n      return;\r\n    }\r\n    this.props.modalClose();\r\n  };\r\n\r\n  render() {\r\n    const { modalImg, modalClose } = this.props;\r\n\r\n    return (\r\n      <div className={style.Overlay} onClick={modalClose}>\r\n        <div className={style.Modal}>\r\n          <img src={modalImg} alt=\"\" />\r\n        </div>\r\n      </div>\r\n      // <div onClick={modalClose} className={style.Overlay}>\r\n      //   <div className={style.Modal}>\r\n      //     <img src={modalImg} alt=\"\" />\r\n      //   </div>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","function FetchImages(img, page) {\r\n  const API_KEY = \"23793880-43251762e8c5681d941546cf6\";\r\n\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${img}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`No pictures \"${img}\" were found`));\r\n  });\r\n}\r\n\r\nconst imagesAPI = { FetchImages };\r\n\r\nexport default imagesAPI;\r\n","import React, { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport Searchbar from \"./Components/SearchBar/SearchBar\";\nimport ImageGallery from \"./Components/ImageGallery/ImageGallery\";\nimport Button from \"./Components/Button/Button\";\nimport Loader from \"./Components/Loader/Loader\";\nimport Modal from \"./Components/Modal/Modal\";\nimport imagesApi from \"./Services/API\";\n\nconst Status = {\n  IDLE: \"idle\", // стоїть на місці\n  PENDING: \"pending\", // очікується\n  RESOLVED: \"resolved\", // виконалось\n  REJECTED: \"rejected\", // відхилено\n};\n\nclass App extends Component {\n  state = {\n    searchImg: null,\n    page: 1,\n    imgArr: [],\n    largeImageURL: \"\",\n    isModalOpen: false,\n    error: null,\n    status: Status.IDLE,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevState.searchImg;\n    const nextName = this.state.searchImg;\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n    if (prevName !== nextName) {\n      this.setState({ imgArr: [], page: 1, status: Status.PENDING });\n    }\n    if (prevName !== nextName || prevPage !== nextPage) {\n      this.FetchImages(nextName, nextPage);\n    }\n  }\n\n  getData = (data) => {\n    return data.map(({ id, tags, webformatURL, largeImageURL }) => {\n      return {\n        id: id,\n        webformatURL: webformatURL,\n        tags: tags,\n        largeImageURL: largeImageURL,\n      };\n    });\n  };\n\n  FetchImages = (nextName, nextPage) => {\n    imagesApi\n      .FetchImages(nextName, nextPage)\n      .then(({ hits }) => {\n        const data = this.getData(hits);\n        this.setState({ imgArr: data, status: \"resolved\" });\n\n        if (!hits.length) {\n          alert(\"No such pictures, try again\");\n          this.setState({\n            error: \"Something went wrong. Please try again\",\n            status: \"rejected\",\n          });\n        } else this.setState({ error: null });\n      })\n      .catch((error) => this.setState({ error, status: Status.REJECTED }));\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { value } = event.target[1];\n    if (value.trim() === \"\") {\n      return toast.error(\"Enter name of picture you are looking for!\");\n    }\n\n    this.setState({\n      searchImg: value.toLowerCase(),\n      loading: true,\n      page: 1,\n      imgArr: [],\n    });\n  };\n\n  handleLoadeMore = (searchImg, page) => {\n    imagesApi\n      .FetchImages(searchImg, page)\n      .then(({ hits }) => {\n        const data = this.getData(hits);\n        this.setState((prev) => ({\n          imgArr: [...prev.imgArr, ...data],\n          status: \"resolved\",\n        }));\n        this.scroll();\n      })\n      .catch((error) => this.setState({ error, status: \"reject\" }));\n  };\n\n  scroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  hendelOpenModal = (img) => {\n    this.setState({\n      isModalOpen: true,\n      modalImg: img,\n    });\n  };\n\n  hendelCloseModal = () => {\n    this.setState({ isModalOpen: false, modalImg: \"\" });\n  };\n\n  render() {\n    const { imgArr, error, status, isModalOpen, modalImg } = this.state;\n    const resolvedImg = status === Status.RESOLVED && imgArr.length > 11;\n    // loading, currentPage,\n    return (\n      <>\n        <ToastContainer autoClose={3000} />\n        <Searchbar onSubmit={this.handleSubmit} />\n        {status === Status.IDLE && (\n          <h2 className=\"invitation\">Use Search above!</h2>\n        )}\n        {status === Status.REJECTED && <h1>{error.message}</h1>}\n\n        {resolvedImg && (\n          <ImageGallery imgArr={imgArr} onOpen={this.hendelOpenModal} />\n        )}\n        {status === Status.PENDING && <Loader />}\n        {imgArr.length !== 0 && <Button onClick={this.handleLoadeMore} />}\n        {isModalOpen && (\n          <Modal modalImg={modalImg} modalClose={this.hendelCloseModal} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__2mzcr\",\"SearchForm\":\"SearchBar_SearchForm___ywuu\",\"SearchFormButton\":\"SearchBar_SearchFormButton__bXkGe\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__22KUj\",\"SearchFormInput\":\"SearchBar_SearchFormInput__3oCDe\"};"],"sourceRoot":""}